from telegram import Update, InputFile
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
import requests
import os
from io import BytesIO

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
TOKEN = "7544047422:AAHYNo5zclYgECND9iu6ZsxZjd8M2e7dC38"
API_URL = "http://–≤–∞—à-—Å–µ—Ä–≤–µ—Ä.railway.app"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à URL


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≤–∞—à–∏–º API.\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/send <—Ç–µ–∫—Å—Ç> - –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "/get - –ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "/upload - –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ (–æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é)\n"
        "/list - –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ñ–æ—Ç–æ\n"
        "/view <–∏–º—è> - –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ —Ñ–æ—Ç–æ"
    )


async def send_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä"""
    if not context.args:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /send")
        return

    message = ' '.join(context.args)
    response = requests.get(f"{API_URL}/send_message/{message}")

    if response.status_code == 200:
        await update.message.reply_text("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä!")
    else:
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è")


async def get_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–∞"""
    response = requests.get(f"{API_URL}/get_message")
    data = response.json()

    if data.get("message"):
        await update.message.reply_text(f"üì© –°–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–∞:\n{data['message']}")
    else:
        await update.message.reply_text("üì≠ –ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π")


async def handle_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º—ã—Ö —Ñ–æ—Ç–æ"""
    photo = update.message.photo[-1]  # –ë–µ—Ä–µ–º —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    file = await photo.get_file()

    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ –≤ –ø–∞–º—è—Ç—å
    photo_bytes = BytesIO()
    await file.download_to_memory(photo_bytes)
    photo_bytes.seek(0)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    response = requests.post(
        f"{API_URL}/upload_photo",
        files={"file": ("photo.jpg", photo_bytes)}
    )

    if response.status_code == 200:
        data = response.json()
        await update.message.reply_text(
            f"üì∏ –§–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!\n"
            f"–ò–º—è —Ñ–∞–π–ª–∞: {data['filename']}\n"
            f"URL: {API_URL}{data['url']}"
        )
    else:
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–æ—Ç–æ")


async def list_photos(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö —Ñ–æ—Ç–æ"""
    response = requests.get(f"{API_URL}/photos/")

    if response.status_code == 200:
        photos = response.json().get("photos", [])
        if photos:
            await update.message.reply_text(
                "üì∑ –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ–æ—Ç–æ:\n" +
                "\n".join(photos))
        else:
            await update.message.reply_text("üì≠ –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ–æ—Ç–æ")
    else:
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Ñ–æ—Ç–æ")



async def view_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü—Ä–æ—Å–º–æ—Ç—Ä –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ñ–æ—Ç–æ"""
    if not context.args:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∏–º—è —Ñ–∞–π–ª–∞ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /view")
        return

    filename = context.args[0]
    response = requests.get(f"{API_URL}/photos/{filename}")

    if response.status_code == 200:
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–æ—Ç–æ
        photo_bytes = BytesIO(response.content)
        await update.message.reply_photo(photo=InputFile(photo_bytes, filename=filename))
    else:
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–æ—Ç–æ: {response.text}")

def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    app = Application.builder().token(TOKEN).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("send", send_message))
    app.add_handler(CommandHandler("get", get_message))
    app.add_handler(CommandHandler("upload", handle_photo))
    app.add_handler(CommandHandler("list", list_photos))
    app.add_handler(CommandHandler("view", view_photo))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ (–µ—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç –±–µ–∑ –∫–æ–º–∞–Ω–¥—ã)
    app.add_handler(MessageHandler(filters.PHOTO, handle_photo))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == "__main__":
    main()